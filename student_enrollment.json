{
  "$id": "https://example.com/product.schema.json",
  "title": "Student_Enrollment",
  "description": "Student Enrollment Description",
  "type": "object",
  "properties": {
    "learning_program_ctid": {
      "description": "The CTID for the Learning Program, which will include all courses in the micro-pathway. All Learning Programs published to the Credential Registry have a CTID. The Credential Engine team will provide the Learning Program CTIDs to each college.. Format:39 characters  The CTID follows a standard format and serves as the primary, unique identifier for all major objects in the Credential Registry.",
      "anyOf": [
        {
          "type": "string",
          "pattern": "^[a-z|0-9]{2}-[a-z|0-9]{8}-[a-z|0-9]{4}-[a-z|0-9]{4}-[a-z|0-9]{4}-[a-z|0-9]{12}$"
        },
        {
          "enum": ["UK"]
        }
      ]
    },
    "Micropathway_abbrev": {
      "description": "Abbreviation to designate the micro-pathway assigned by the college that will be consistently used for all data uploads for that micro-pathway to the Lab. Format:Alphanumeric up to 6 characters All Caps Can't include spaces, periods, apostrophes, or hyphens",
      "type": "string",
      "pattern": "^[A-Z|0-9]{1,6}$"
    },
    "cohort_month_day": {
      "description": "Month and day in which student first enrolled in at least one course in the micro-pathway program. While optional, this should be used for any program that does not use typical semester-based cohorts.. Format:MMDD",
      "type": "string",
      "pattern": "^(0[0-9]{1}|1[0-2]{1})(0[1-9]{1}|1[0-9]{1}|2[0-9]{1}|3[0-1]{1})$"
    },
    "institution_id": {
      "description": "Your institution's OPEID. Format: Use an 8- digit OPEID (6-digit OPEID + 2-digit branch code). If you do not have a branch code, enter your 6-digit OPEID with 00 at the end.",
      "type": "integer",
      "minimum": 1000000,
      "maximum": 99999999
    },
    "special_program_flag": {
      "description": "Identify all students participating in the CCGEF program by adding ccgefcohort in this field.  Format: Identify all students participating with the CCGEF program. Only accept ccgefcohort.",
      "type": "string",
      "minLength": 11,
      "maxLength": 24
    },
    "cohort": {
      "description": "Academic year in which the student first enrolled in at least one course. Must be 2 consecutive years between 2000 and today Example: 2019-20 Format: Date YYYY-YY",
      "type": "string",
      "pattern": "^2[0-9]{3}-[0-9]{2}$"
    },
    "cohort_term": {
      "description": "Term in which student first enrolled in at least one course in the CCGEF Micro-pathway program. Format: Valid codes:  Fall  Winter  Spring  Summer",
      "enum": ["Fall", "Winter", "Spring", "Summer"]
    },
    "ssn": {
      "description": "Student's social security number. For CCGEF, provide both the Student ID and SSN.  Format: 9 digits",
      "anyOf": [
        {
          "type": "string",
          "pattern": "^[0-9]{9}"
        },
        {
          "enum": ["UK"]
        }
      ]
    },
    "student_id": {
      "description": "Your institution's ID number for the student. Cannot be the same as SSN or ITIN. Can include: period, apostrophe, hyphen, underscore. For CCGEF, provide both the Student ID and SSN. Format: Alphanumeric 3 - 20 characters",
      "type": "string",
      "minLength": 2,
      "maxLength": 20
    },
    "first_name": {
      "description": "Student's first name. Format: Alphanumeric, up to 60 characters  Can include: space, period, apostrophe, hyphen.",
      "type": "string",
      "minLength": 1,
      "maxLength": 60
    },
    "middle_name": {
      "description": "Student's middle name. Format: Alphanumeric, up to 60 characters. Can include: space, period, apostrophe, hyphen. Use UK for Unknown. Use NA for Not Applicable.",
      "anyOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 60
        },
        {
          "enum": ["UK", "NA"]
        }
      ]
    },
    "last_name": {
      "description": "Student's last name. Format: Alphanumeric, up to 60 characters  Can include: space, period, apostrophe, hyphen.",
      "type": "string",
      "minLength": 1,
      "maxLength": 60
    },
    "dob": {
      "description": "Student's date of birth. Format: YYYYMMDD  ",
      "type": "string",
      "pattern": "^[0-9]{4}(0[0-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])$"
    },
    "ethnicity": {
      "description": "Student's ethnicity. Format: Valid codes: H = Hispanic or Latino NH = Not Hispanic or Latino UK = Unknown",
      "enum": ["H", "NH", "UK", "N"]
    },
    "race": {
      "description": "Student's race. Format: Valid codes: A = Nonresident Alien AI = American Indian or Alaska Native AN = Asian B = Black HP = Native Hawaiian or other Pacific Islander MR = Multiracial (two or more races) W = White HU = Hispanic or Latino race is unknown UK = Unknown",
      "enum": ["A", "IA", "AI", "AN", "B", "HP", "MR", "W", "HU", "UK"]
    },
    "veteran_status": {
      "description": "Student's military status at the time of enrollment. Format: Valid values: 0 = None 1 = Active Duty 2 = Veteran 3 = Reserves/Guard  Use UK for Unknown.",
      "enum": [0, 1, 2, 3, "UK"]
    },
    "disability_status": {
      "description": "Disability status of student with the institution or system. Format: Valid codes: Y = Yes, should the student have a documented record with the disability office as learning, physical, and/or psychological disability. N = No, the student does not identify or have documented/reported disability with the institution or system UK = Unknown.",
      "enum": ["Y", "N", "UK"]
    },
    "gender": {
      "description": "Student's gender at the time of enrollment. Format: Valid codes: M = Male F = Female N = Non-binary or Non-gender  P = Prefer to self-describe UK = Unknown ",
      "enum": ["M", "F", "N", "P", "UK", "X"]
    },
    "marital_status": {
      "description": "Student's marital status at the time of enrollment. Format: Valid values and code: 1. Currently Married  2. Divorced, Separated or Widowed 3. Never Married  Use UK for Unknown ",
      "enum": [1, 2, 3, "UK"]
    },
    "parenting": {
      "description": "Student's parental status at the time of enrollment. Format: Valid codes: Y = Yes - currently a parent or guardian to any child under the age of 18 or other dependant living in the home.  N = No - not currently a parent or guardian to any child under the age of 18 or other dependant living in the home.  Use UK for Unknown.",
      "enum": ["Y", "N", "UK"]
    },
    "hs_completion_year": {
      "description": "Date student earned their high school diploma or equivalency. Must be a year between 1900 and today.   However, for CCGEF, if currently a high school student, include the anticipated high school completion year. Format: YYYY  Use UK for Unknown. Use NA for Not Applicable.",
      "anyOf": [
        {
          "type": "string",
          "pattern": "^[0-9]{4}$"
        },
        {
          "enum": ["UK", "NA"]
        }
      ]
    },
    "employment_status": {
      "description": "Student's employment status at the time of enrollment. Format: Valid values and code: 1= Full-time 2=Less than full-time but at least half-time 3=Less than half-time 4=Not employed  Use UK for Unknown.",
      "enum": [1, 2, 3, 4, "UK", 0]
    },
    "first_gen": {
      "description": "Indicates whether either of the student's parents has completed a certificate or higher credential at a post-secondary institution. Format: Valid values and code: 1 = Neither parent completed college. 2 = At least one parent completed college.  Use UK for Unknown.",
      "enum": [1, 2, "N", "P", "C", "A", "B", "E", "UK"]
    },
    "dual_summer": {
      "description": "Student was a previous dual enrollment student and/or enrolled in summer work before their first term enrolled with credential-seeking status Format: Valid codes: DE = Past dual enrollment SE = Past summer enrollment DS = Past dual and summer enrollment N = Neither dual nor summer enrollment UK = Unknown",
      "enum": ["DE", "SE", "DS", "N", "UK"]
    },
    "enrollment_type": {
      "description": "Student's cohort enrollment type. Format: Valid codes: F = First time at institution, non-transfer C = Continuing R = Re-admit T = Transfer UK = Uknown  ",
      "enum": ["F", "C", "R", "T", "UK"]
    },
    "number_of_college_credits_attempted_to_transfer": {
      "description": "Number of credits the student attempted to transfer from another institution (whether or not the credits were accepted). Format: Numeric XXXX.XX  If the student is a transfer student but did not attempt to transfer credits, enter 0.  Use NA for Not Applicable.",
      "anyOf": [
        {
          "type": "number"
        },
        {
          "enum": [0, "NA"]
        }
      ]
    },
    "number_of_college_transfer_credits_accepted": {
      "description": "Number of transfer credits your institution accepted for the student. Format: Numeric XXXX.XX  If the student is a transfer student but no transfer credits were accepted, enter 0.  Use NA for Not Applicable.",
      "anyOf": [
        {
          "type": "number"
        },
        {
          "enum": ["NA"]
        }
      ]
    },
    "reading_replacement": {
      "description": "Student was college ready in Reading upon enrollment based on your institution's Reading placement policies. Format: Valid codes:  C = College ready  N = Not college ready UK = Unknown NA = Not applicable to program",
      "enum": ["C", "N", "UK", "NA"]
    },
    "math_placement": {
      "description": "Student was college ready in math upon enrollment based on the institution's math placement policies. Format: Valid codes: C = College ready N = Not college ready UK = Unknown NA = Not applicable to program",
      "enum": ["C", "N", "UK", "NA"]
    },
    "english_placement": {
      "description": "Student was college ready in English upon enrollment based on the institution's English placement policies. Format: Valid codes: C = College ready N = Not college ready UK = Unknown NA = Not applicable to program",
      "enum": ["C", "N", "UK", "NA"]
    },
    "gateway_math_status": {
      "description": "Whether the student is required to complete a gateway math course at enrollment. Format: You may classify more than one course as a math gateway course.  Valid codes: R = Required N = Not required UK = Unknown NA = Not applicable to program",
      "enum": ["R", "N", "UK", "NA"]
    },
    "gateway_english_status": {
      "description": "Whether the student is required to complete a gateway English course at enrollment. Format: You may classify more than one course as an English gateway course.  Valid codes: R = Required N = Not required UK = Unknown NA = Not applicable to program",
      "enum": ["R", "N", "UK", "NA"]
    },
    "current_county": {
      "description": "Student's current country of residence. Format: See the PDP Appendix 2 for a list of valid country codes.   Use UK for Unknown.",
      "anyOf": [
        {
          "type": "string",
          "pattern": "^[A-Z]{2}"
        },
        {
          "enum": ["UK"]
        }
      ]
    },
    "student_phone_number": {
      "description": "Student's phone number. Format: String, up to 20 digits  US and international phone numbers are accepted.  Use UK for Unknown.",
      "anyOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        {
          "enum": ["UK"]
        }
      ]
    },
    "student_email": {
      "description": "Student's email address. Format: String, up to 255 characters.  Use UK for Unknown.",
      "anyOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$"
        },
        {
          "enum": ["UK"]
        }
      ]
    },
    "pell_recipent": {
      "description": "Whether the student received a Pell grant during the term. Format: Valid codes: Y = Yes N = N UK = Unknown, or information cannot be shared by the institution.",
      "enum": ["Y", "N", "UK"]
    },
    "institutional_grant": {
      "description": "Total amount of other institutional grants (other than needs-based, employer aid, merit aid, or military/veteran grants) the student received during the academic year. Format: Numeric up to 5 or 6 digits. If the student did not receive an Other Institutional Grant, enter 0.   Use UK for Unknown. Use NA for Not Applicable.",
      "anyOf": [
        {
          "type": "integer",
          "minimum": 0
        },
        {
          "enum": ["NA", "UK"]
        }
      ]
    },
    "ccgef_sponsorship": {
      "description": "Total amount of CCGEF scholarship funds received by the student Format: Numeric up to 5 or 6 digits. If the student did not receive any CCGEF scholarship, enter 0.  Use NA for Not Applicable.",
      "anyOf": [
        {
          "type": "integer",
          "minimum": 0
        },
        {
          "enum": ["NA"]
        }
      ]
    },
    "non-credit_course": {
      "description": "Is this course a non-credit course? Format: Valid Codes: Y = Yes N = No",
      "enum": ["Y", "N", "CU", "CG", "CC", "CD", "EL", "AB", "GE", "NC", "O"]
    },
    "course_ctid": {
      "description": "The CTID for the course. All courses published to the Credential Registry have a CTID. The Credential Engine team will provide the course CTIDs to each college. Format: 39 characters  The CTID follows a standard format and serves as the primary, unique identifier for all major objects in the Credential Registry. ",
      "anyOf": [
        {
          "type": "string",
          "pattern": "^[a-z|0-9]{2}-[a-z|0-9]{8}-[a-z|0-9]{4}-[a-z|0-9]{4}-[a-z|0-9]{4}-[a-z|0-9]{12}$"
        },
        {
          "enum": ["UK"]
        }
      ]
    },
    "course_prefix": {
      "description": "Course prefix as it appears in your institution's catalog Format: For example, ENG 101 Composition I = ENG. Can include: period, hyphen, underscore, ampersand",
      "type": "string",
      "minLength": 1,
      "maxLength": 50
    },
    "course_number": {
      "description": "Course number as it appears in your institution's catalog. Format: For example, ENG 101 Composition I = 101. Can include: period, hyphen, underscore, ampersand",
      "type": "string",
      "minLength": 1,
      "maxLength": 20
    },
    "course_name": {
      "description": "Course name as it appears in your institution's catalog. Format: For example, ENG 101 Composition I = Composition I.",
      "type": "string",
      "minLength": 1,
      "maxLength": 50
    },
    "course_cip": {
      "description": "Course Classification of Instructional Programs code.  If a CIP code is not assigned to a course, use the CIP code assigned to the CCGEG Micro-pathway program that offers the course. Format: Use Standard 6-digit CIP Format: 99.9999  See https://nces.ed.gov/ipeds/cipcode for a list of valid codes. If not available, enter Missing. We accept both the 2010 and 2020 CIP codes.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "enum": ["Missing"]
        }
      ]
    },
    "course_begin_date": {
      "description": "Date the course began. Year must be between 1900 and today. Format: YYYYMMDD",
      "type": "string",
      "pattern": "^[0-9]{4}(0[0-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])$"
    },
    "course_end_date": {
      "description": "Date the course is scheduled to end. Year must be after 1900. Format: YYYYMMDD",
      "type": "string",
      "pattern": "^[0-9]{4}(0[0-9]|1[0-2])(0[1-9]|1[0-9]|2[0-9]|3[0-1])$"
    }
  },
  "required": [
    "learning_program_ctid",
    "Micropathway_abbrev",
    "institution_id",
    "special_program_flag",
    "cohort",
    "cohort_term",
    "ssn",
    "student_id",
    "first_name",
    "middle_name",
    "last_name",
    "dob",
    "ethnicity",
    "race",
    "gender",
    "dual_summer",
    "enrollment_type",
    "number_of_college_credits_attempted_to_transfer",
    "number_of_college_transfer_credits_accepted",
    "student_phone_number",
    "student_email",
    "pell_recipent",
    "institutional_grant",
    "ccgef_sponsorship",
    "non-credit_course",
    "course_ctid",
    "course_prefix",
    "course_number",
    "course_name",
    "course_cip",
    "course_begin_date",
    "course_end_date"
  ]
}
